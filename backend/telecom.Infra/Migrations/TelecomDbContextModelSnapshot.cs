// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using telecom.Infra.Data;

#nullable disable

namespace telecom.Infra.Migrations
{
    [DbContext(typeof(TelecomDbContext))]
    partial class TelecomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("telecom.Domain.Entitys.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DATA_INICIO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_FILIAL");

                    b.Property<Guid>("OperadoraId")
                        .HasColumnType("uuid")
                        .HasColumnName("OPERADORA_ID");

                    b.Property<string>("PlanoContratado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("PLANO_CONTRATADO");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("VALOR_MENSAL");

                    b.HasKey("Id");

                    b.HasIndex("OperadoraId")
                        .HasDatabaseName("IX_contratos_operadora_id");

                    b.ToTable("TB_CONTRATO", (string)null);
                });

            modelBuilder.Entity("telecom.Domain.Entitys.Faturas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uuid")
                        .HasColumnName("CONTRATO_ID");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<DateTime>("DateEmissao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DATA_EMISSAO");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("ValorCobrado")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("VALOR_COBRADO");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId")
                        .HasDatabaseName("IX_faturas_contrato_id");

                    b.HasIndex("DataVencimento")
                        .HasDatabaseName("IX_faturas_data_vencimento");

                    b.ToTable("TB_FATURA", (string)null);
                });

            modelBuilder.Entity("telecom.Domain.Entitys.Operadora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContatoSuporte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("CONTATO_SUPORTE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME");

                    b.Property<int>("eTipoServicoOperadora")
                        .HasColumnType("integer")
                        .HasColumnName("TIPO_SERVICO");

                    b.HasKey("Id");

                    b.ToTable("TB_OPERADORA", (string)null);
                });

            modelBuilder.Entity("telecom.Domain.Entitys.Contrato", b =>
                {
                    b.HasOne("telecom.Domain.Entitys.Operadora", "Operadora")
                        .WithMany("Contratos")
                        .HasForeignKey("OperadoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Operadora");
                });

            modelBuilder.Entity("telecom.Domain.Entitys.Faturas", b =>
                {
                    b.HasOne("telecom.Domain.Entitys.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("telecom.Domain.Entitys.Operadora", b =>
                {
                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
